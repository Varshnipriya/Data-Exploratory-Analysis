# -*- coding: utf-8 -*-
"""assignment ds

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18SP1Y2l0v03rDBVsVCUkzt1sR5Hq5_sf
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files
uploaded =files.upload()

df=pd.read_csv('/content/samplebankloandata.csv')
print(df.head())

print(df.dtypes)

print(df.isnull().sum())

print(df.describe())

sns.histplot(data=df, x='installment',kde= True)
plt.title('Distribution of Installment')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv("/content/samplebankloandata.csv")
sns.countplot(data=df,x='region')
plt.xticks(rotation=45)
plt.title("Region Count byType")
plt.show()

import numpy as np
sns.barplot(data=df,x='grade',y='installment',estimator=np.mean)
plt.xticks(rotation=45)
plt.title("Average installment by grade")
plt.show()

plt.pie(df['income_category'].value_counts(), labels=df['income_category'].value_counts().index,autopct='%1.1f%%')
plt.title('Income Category')
plt.show()

sns.boxplot(data=df, x='loan_amount', y='term', showfliers=False)
plt.title('Loan amount by term')
plt.show()

df['term-interest_payments']=df['term'].astype(str) + '-' +df['interest_payments'].astype(str)
df.groupby('term-interest_payments')['installment'].sum().plot()
plt.title('termwise interest payment')
plt.xticks(rotation=45)
plt.show()

sns.scatterplot(data=df, x='annual_inc', y='loan_amount')
plt.title('Annual income vs. Loan amount')
plt.show()

variables_of_interest = ['annual_inc', 'loan_amount', 'interest_rate', 'dti']
subset_df = df[variables_of_interest]

# Calculate the correlation matrix
corr = subset_df.corr()

# Create the heatmap
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()



import plotly.express as px
fig = px.scatter_3d(df, x='annual_inc', y='loan_amount', z='term',color='application_type')
fig.update_layout(scene = dict(
                    xaxis = dict(title  = 'Annual Income'),
                    yaxis = dict(title  = 'Loan Amount'),
                    zaxis = dict(title  = 'term')))
fig.show()